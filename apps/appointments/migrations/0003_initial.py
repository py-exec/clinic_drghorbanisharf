# Generated by Django 5.2.4 on 2025-07-27 10:56

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('appointments', '0002_initial'),
        ('doctors', '0001_initial'),
        ('patient', '0001_initial'),
        ('reception', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='appointment',
            name='location',
            field=models.ForeignKey(help_text='شعبه\u200cای که نوبت در آن برگزار می\u200cشود.', on_delete=django.db.models.deletion.PROTECT, to='reception.location', verbose_name='شعبه'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='patient',
            field=models.ForeignKey(help_text='بیماری که نوبت برای او رزرو شده است.', on_delete=django.db.models.deletion.PROTECT, to='patient.patient', verbose_name='بیمار'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='previous_appointment',
            field=models.OneToOneField(blank=True, help_text='اگر این نوبت از تغییر زمان یک نوبت دیگر ایجاد شده باشد.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rescheduled_to_appointment', to='appointments.appointment', verbose_name='نوبت قبلی (در صورت تغییر زمان)'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='resources',
            field=models.ManyToManyField(blank=True, help_text='منابع (مانند اتاق، تجهیزات) که برای این نوبت رزرو شده\u200cاند.', to='reception.resource', verbose_name='منابع مورد نیاز'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='service_type',
            field=models.ForeignKey(help_text='نوع خدمتی که در این نوبت ارائه می\u200cشود.', on_delete=django.db.models.deletion.PROTECT, to='reception.servicetype', verbose_name='نوع خدمت'),
        ),
        migrations.AddField(
            model_name='recurringappointmentseries',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_recurring_series', to=settings.AUTH_USER_MODEL, verbose_name='ثبت کننده'),
        ),
        migrations.AddField(
            model_name='recurringappointmentseries',
            name='doctor',
            field=models.ForeignKey(blank=True, help_text='پزشک اصلی برای این سری نوبت\u200cها (اختیاری).', null=True, on_delete=django.db.models.deletion.SET_NULL, to='doctors.doctor', verbose_name='پزشک مرتبط'),
        ),
        migrations.AddField(
            model_name='recurringappointmentseries',
            name='location',
            field=models.ForeignKey(blank=True, help_text='شعبه اصلی برای این سری نوبت\u200cها.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='reception.location', verbose_name='شعبه اصلی'),
        ),
        migrations.AddField(
            model_name='recurringappointmentseries',
            name='patient',
            field=models.ForeignKey(help_text='بیمار مربوط به این سری نوبت\u200cها.', on_delete=django.db.models.deletion.CASCADE, to='patient.patient', verbose_name='بیمار'),
        ),
        migrations.AddField(
            model_name='recurringappointmentseries',
            name='service_type',
            field=models.ForeignKey(blank=True, help_text='نوع خدمتی که در این سری ارائه می\u200cشود.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='reception.servicetype', verbose_name='نوع خدمت'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='recurring_series',
            field=models.ForeignKey(blank=True, help_text='ارجاع به سری نوبت\u200cهای تکراری که این نوبت عضوی از آن است.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='appointments', to='appointments.recurringappointmentseries', verbose_name='سری نوبت\u200cهای تکراری اصلی'),
        ),
        migrations.AddField(
            model_name='waitinglistentry',
            name='assigned_appointment',
            field=models.OneToOneField(blank=True, help_text='نوبتی که از طریق این درخواست لیست انتظار رزرو شده است.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='waiting_list_source', to='appointments.appointment', verbose_name='نوبت رزرو شده'),
        ),
        migrations.AddField(
            model_name='waitinglistentry',
            name='doctor',
            field=models.ForeignKey(blank=True, help_text='پزشک مورد نظر برای نوبت (اختیاری).', null=True, on_delete=django.db.models.deletion.SET_NULL, to='doctors.doctor', verbose_name='پزشک مورد نظر'),
        ),
        migrations.AddField(
            model_name='waitinglistentry',
            name='location',
            field=models.ForeignKey(blank=True, help_text='شعبه مورد نظر برای نوبت (اختیاری).', null=True, on_delete=django.db.models.deletion.SET_NULL, to='reception.location', verbose_name='شعبه مورد نظر'),
        ),
        migrations.AddField(
            model_name='waitinglistentry',
            name='patient',
            field=models.ForeignKey(help_text='بیمار در لیست انتظار.', on_delete=django.db.models.deletion.CASCADE, to='patient.patient', verbose_name='بیمار'),
        ),
        migrations.AddField(
            model_name='waitinglistentry',
            name='service_type',
            field=models.ForeignKey(blank=True, help_text='نوع خدمت مورد نظر (اختیاری).', null=True, on_delete=django.db.models.deletion.SET_NULL, to='reception.servicetype', verbose_name='نوع خدمت مورد نظر'),
        ),
        migrations.AddField(
            model_name='waitinglistentry',
            name='specialty',
            field=models.ForeignKey(blank=True, help_text='تخصص مورد نظر پزشک (اختیاری، در صورت عدم انتخاب پزشک خاص).', null=True, on_delete=django.db.models.deletion.SET_NULL, to='doctors.specialty', verbose_name='تخصص مورد نظر'),
        ),
        migrations.AddIndex(
            model_name='recurringappointmentseries',
            index=models.Index(fields=['patient'], name='appointment_patient_70114e_idx'),
        ),
        migrations.AddIndex(
            model_name='recurringappointmentseries',
            index=models.Index(fields=['doctor'], name='appointment_doctor__504439_idx'),
        ),
        migrations.AddIndex(
            model_name='recurringappointmentseries',
            index=models.Index(fields=['status'], name='appointment_status_ca06d8_idx'),
        ),
        migrations.AddIndex(
            model_name='recurringappointmentseries',
            index=models.Index(fields=['start_date', 'end_date'], name='appointment_start_d_7965d3_idx'),
        ),
        migrations.AddIndex(
            model_name='appointment',
            index=models.Index(fields=['doctor', 'date', 'time', 'end_time'], name='appointment_doctor__cc4ccb_idx'),
        ),
        migrations.AddIndex(
            model_name='appointment',
            index=models.Index(fields=['patient', 'date'], name='appointment_patient_83aa7a_idx'),
        ),
        migrations.AddIndex(
            model_name='appointment',
            index=models.Index(fields=['location', 'date', 'status'], name='appointment_locatio_f6dc43_idx'),
        ),
        migrations.AddIndex(
            model_name='appointment',
            index=models.Index(fields=['tracking_code'], name='appointment_trackin_f22b99_idx'),
        ),
        migrations.AddIndex(
            model_name='appointment',
            index=models.Index(fields=['status', 'date'], name='appointment_status_53df83_idx'),
        ),
        migrations.AddIndex(
            model_name='appointment',
            index=models.Index(fields=['created_at'], name='appointment_created_5f1d98_idx'),
        ),
        migrations.AddIndex(
            model_name='appointment',
            index=models.Index(fields=['date', 'status', 'location', 'doctor'], name='appointment_date_0b21bb_idx'),
        ),
        migrations.AddIndex(
            model_name='waitinglistentry',
            index=models.Index(fields=['patient'], name='appointment_patient_94fc02_idx'),
        ),
        migrations.AddIndex(
            model_name='waitinglistentry',
            index=models.Index(fields=['doctor'], name='appointment_doctor__27d466_idx'),
        ),
        migrations.AddIndex(
            model_name='waitinglistentry',
            index=models.Index(fields=['service_type'], name='appointment_service_cd1b46_idx'),
        ),
        migrations.AddIndex(
            model_name='waitinglistentry',
            index=models.Index(fields=['status'], name='appointment_status_e61455_idx'),
        ),
        migrations.AddIndex(
            model_name='waitinglistentry',
            index=models.Index(fields=['created_at'], name='appointment_created_def897_idx'),
        ),
    ]
