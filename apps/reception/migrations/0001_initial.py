# Generated by Django 5.2.4 on 2025-07-27 10:56

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounting', '0002_initial'),
        ('appointments', '0002_initial'),
        ('patient', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='نام منحصر به فرد برای هر شعبه (مثال: شعبه مرکزی).', max_length=255, unique=True, verbose_name='نام شعبه')),
                ('address', models.TextField(blank=True, help_text='آدرس پستی کامل شعبه.', null=True, verbose_name='آدرس کامل')),
                ('phone_number', models.CharField(blank=True, help_text='شماره تماس اصلی شعبه.', max_length=20, null=True, verbose_name='شماره تماس شعبه')),
                ('email', models.EmailField(blank=True, help_text='آدرس ایمیل برای ارتباط با شعبه.', max_length=254, null=True, verbose_name='ایمیل شعبه')),
                ('is_active', models.BooleanField(default=True, help_text='آیا این شعبه در حال حاضر فعال و قابل استفاده است؟', verbose_name='فعال')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاریخ ایجاد')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاریخ بروزرسانی')),
            ],
            options={
                'verbose_name': 'شعبه',
                'verbose_name_plural': 'شعب',
                'ordering': ['name'],
                'indexes': [models.Index(fields=['name'], name='reception_l_name_552df1_idx'), models.Index(fields=['is_active'], name='reception_l_is_acti_510d20_idx')],
            },
        ),
        migrations.CreateModel(
            name='Reception',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.CharField(blank=True, choices=[('phone', 'تلفنی'), ('online', 'آنلاین'), ('in_person', 'حضوری'), ('referral', 'ارجاعی')], help_text='نحوه آغاز فرآیند پذیرش (مثلاً تماس تلفنی، مراجعه حضوری).', max_length=20, null=True, verbose_name='منبع پذیرش')),
                ('admission_date', models.DateTimeField(default=django.utils.timezone.now, help_text='تاریخ و زمان دقیق پذیرش بیمار.', verbose_name='تاریخ پذیرش')),
                ('admission_code', models.CharField(help_text='کد یکتا برای هر پذیرش جهت پیگیری آسان.', max_length=30, unique=True, verbose_name='کد پذیرش')),
                ('referring_doctor_name', models.CharField(blank=True, help_text='نام پزشک خارجی که بیمار را ارجاع داده است.', max_length=100, null=True, verbose_name='نام پزشک ارجاع\u200cدهنده')),
                ('referring_center_name', models.CharField(blank=True, help_text='نام مرکز درمانی/تشخیصی که بیمار را ارجاع داده است.', max_length=100, null=True, verbose_name='نام مرکز ارجاع\u200cدهنده')),
                ('consent_obtained', models.BooleanField(default=False, help_text='آیا رضایت\u200cنامه لازم از بیمار (یا ولی او) دریافت شده است؟', verbose_name='رضایت\u200cنامه دریافت شد؟')),
                ('attached_documents', models.FileField(blank=True, help_text='فایل\u200cهای ضمیمه مرتبط با پذیرش (مثلاً معرفی\u200cنامه).', null=True, upload_to='reception_docs/', verbose_name='فایل\u200cهای پیوست')),
                ('wait_time_minutes', models.PositiveIntegerField(blank=True, help_text='مدت زمان انتظار بیمار از ورود تا شروع اولین خدمت.', null=True, verbose_name='مدت زمان انتظار (دقیقه)')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاریخ ایجاد')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاریخ بروزرسانی')),
                ('notes', models.TextField(blank=True, help_text='یادداشت\u200cها و توضیحات اضافی برای این پذیرش.', null=True, verbose_name='یادداشت\u200cهای پذیرش')),
                ('credit_transaction', models.ForeignKey(blank=True, help_text='تراکنش بستانکاری اصلی مرتبط با این پذیرش (مثلاً بازپرداخت).', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reception_credit', to='accounting.transaction', verbose_name='تراکنش بستانکاری پذیرش')),
                ('debit_transaction', models.ForeignKey(blank=True, help_text='تراکنش بدهکاری اصلی مرتبط با این پذیرش (مثلاً پرداخت هزینه).', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reception_debit', to='accounting.transaction', verbose_name='تراکنش بدهکاری پذیرش')),
                ('location', models.ForeignKey(blank=True, help_text='شعبه\u200cای که این پذیرش در آن انجام شده است.', null=True, on_delete=django.db.models.deletion.PROTECT, to='reception.location', verbose_name='شعبه پذیرش')),
                ('patient', models.ForeignKey(help_text='بیماری که این پذیرش برای او انجام شده است.', on_delete=django.db.models.deletion.PROTECT, related_name='receptions', to='patient.patient', verbose_name='بیمار')),
                ('receptionist', models.ForeignKey(blank=True, help_text='کاربری که این پذیرش را ثبت کرده است.', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='مسئول پذیرش')),
            ],
            options={
                'verbose_name': 'پذیرش',
                'verbose_name_plural': 'پذیرش\u200cها',
                'ordering': ['-admission_date'],
            },
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='نام یا شناسه منبع (مثال: اتاق ۱، دستگاه سونوگرافی).', max_length=255, verbose_name='نام منبع')),
                ('type', models.CharField(choices=[('room', 'اتاق'), ('equipment', 'تجهیزات'), ('staff', 'پرسنل کمکی'), ('other', 'سایر')], help_text='دسته بندی نوع منبع (مثال: اتاق، تجهیزات).', max_length=50, verbose_name='نوع منبع')),
                ('description', models.TextField(blank=True, help_text='جزئیات بیشتر درباره منبع.', null=True, verbose_name='توضیحات منبع')),
                ('is_available', models.BooleanField(default=True, help_text='آیا این منبع در حال حاضر قابل استفاده و قابل رزرو است؟', verbose_name='در دسترس')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاریخ ایجاد')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاریخ بروزرسانی')),
                ('location', models.ForeignKey(blank=True, help_text='شعبه\u200cای که این منبع در آن قرار دارد.', null=True, on_delete=django.db.models.deletion.CASCADE, to='reception.location', verbose_name='شعبه مرتبط')),
            ],
            options={
                'verbose_name': 'منبع',
                'verbose_name_plural': 'منابع',
                'ordering': ['location', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ServiceTariff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.BigIntegerField(help_text='مبلغ هزینه این خدمت به تومان.', verbose_name='هزینه (تومان)')),
                ('valid_from', models.DateField(blank=True, help_text='تاریخ شروع اعتبار این تعرفه (اختیاری).', null=True, verbose_name='شروع اعتبار')),
                ('valid_to', models.DateField(blank=True, help_text='تاریخ پایان اعتبار این تعرفه (اختیاری).', null=True, verbose_name='پایان اعتبار')),
                ('insurance_coverage', models.PositiveIntegerField(blank=True, help_text='درصد پوشش بیمه\u200cای برای این خدمت (اختیاری).', null=True, verbose_name='پوشش بیمه\u200cای (٪)')),
                ('is_active', models.BooleanField(default=True, help_text='آیا این مبلغ  در حال حاضر فعال و قابل ارائه است؟', verbose_name='فعال؟')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاریخ ثبت')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='کاربر ایجادکننده')),
            ],
            options={
                'verbose_name': 'تعرفه خدمت',
                'verbose_name_plural': 'تعرفه\u200cهای خدمات',
                'ordering': ['service_type', '-valid_from'],
            },
        ),
        migrations.CreateModel(
            name='ReceptionService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tracking_code', models.CharField(editable=False, help_text='کد یکتا برای پیگیری این خدمت خاص.', max_length=30, unique=True, verbose_name='کد پیگیری')),
                ('scheduled_time', models.DateTimeField(blank=True, help_text='تاریخ و زمان دقیق برنامه\u200cریزی شده برای انجام این خدمت.', null=True, verbose_name='زمان برنامه\u200cریزی\u200cشده')),
                ('estimated_duration', models.DurationField(blank=True, help_text='مدت زمان تقریبی مورد نیاز برای این خدمت (کپی شده از نوع خدمت).', null=True, verbose_name='مدت تقریبی')),
                ('done_at', models.DateTimeField(blank=True, help_text='تاریخ و زمان دقیق اتمام خدمت.', null=True, verbose_name='زمان انجام')),
                ('service_notes', models.TextField(blank=True, help_text='یادداشت\u200cهای خاص برای این خدمت (مثلاً جزئیات انجام).', null=True, verbose_name='یادداشت خدمت')),
                ('status', models.CharField(choices=[('pending', 'در انتظار'), ('in_progress', 'در حال انجام'), ('done', 'انجام\u200cشده'), ('cancelled', 'کنسل\u200cشده'), ('paused', 'متوقف شده'), ('rejected', 'رد شده')], default='pending', help_text='وضعیت فعلی انجام این خدمت.', max_length=20, verbose_name='وضعیت')),
                ('cancel_reason', models.TextField(blank=True, help_text='دلیل لغو شدن این خدمت.', null=True, verbose_name='دلیل کنسلی')),
                ('cancelled_at', models.DateTimeField(blank=True, help_text='تاریخ و زمان دقیق کنسلی خدمت.', null=True, verbose_name='زمان کنسلی')),
                ('notification_sent', models.BooleanField(default=False, help_text='آیا پیامک/اعلان مربوط به این خدمت ارسال شده است؟', verbose_name='پیامک ارسال شده؟')),
                ('service_index', models.PositiveIntegerField(blank=True, help_text='ترتیب این خدمت در بین خدمات یک پذیرش.', null=True, verbose_name='شماره نوبت در پذیرش')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاریخ ثبت')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='آخرین بروزرسانی')),
                ('appointment', models.ForeignKey(blank=True, help_text='نوبت رزرو شده\u200cای که این خدمت واقعی به آن مربوط است (اختیاری).', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reception_services', to='appointments.appointment', verbose_name='نوبت رزرو شده')),
                ('created_by', models.ForeignKey(help_text='کاربری که این خدمت را در سیستم ثبت کرده است.', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='کاربر ایجادکننده')),
                ('performed_by_staff', models.ForeignKey(blank=True, help_text='کاربری که این خدمت را انجام داده است (پزشک یا پرسنل).', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='performed_services', to=settings.AUTH_USER_MODEL, verbose_name='انجام\u200cدهنده خدمت')),
                ('reception', models.ForeignKey(help_text='پذیرشی که این خدمت در آن انجام شده است.', on_delete=django.db.models.deletion.CASCADE, related_name='services', to='reception.reception', verbose_name='پذیرش')),
                ('tariff', models.ForeignKey(help_text='تعرفه خدمت انتخاب شده برای این مورد (برای هزینه).', on_delete=django.db.models.deletion.PROTECT, to='reception.servicetariff', verbose_name='تعرفه خدمت')),
            ],
            options={
                'verbose_name': 'خدمت پذیرش شده',
                'verbose_name_plural': 'خدمات پذیرش شده',
                'ordering': ['-scheduled_time', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ServiceType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(help_text='کد یکتا برای شناسایی نوع خدمت (مثال: VZT برای ویزیت).', max_length=50, unique=True, verbose_name='کد خدمت')),
                ('name', models.CharField(help_text='نام کامل خدمت (مثال: ویزیت پزشک عمومی).', max_length=100, verbose_name='نام خدمت')),
                ('description', models.TextField(blank=True, null=True, verbose_name='توضیحات خدمت')),
                ('is_active', models.BooleanField(default=True, help_text='آیا این نوع خدمت در حال حاضر فعال و قابل ارائه است؟', verbose_name='فعال؟')),
                ('duration_minutes', models.PositiveIntegerField(default=30, help_text='مدت زمان تقریبی مورد نیاز برای این خدمت (به دقیقه). برای محاسبه پایان نوبت استفاده می\u200cشود.', verbose_name='مدت زمان خدمت (دقیقه)')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاریخ ثبت')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='کاربر ایجادکننده')),
            ],
            options={
                'verbose_name': 'نوع خدمت',
                'verbose_name_plural': 'انواع خدمات',
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='servicetariff',
            name='service_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reception.servicetype', verbose_name='نوع خدمت'),
        ),
        migrations.CreateModel(
            name='PatientServiceStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.PositiveIntegerField(default=0, verbose_name='تعداد دفعات پذیرش/دریافت خدمت')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_stats', to='patient.patient', verbose_name='بیمار')),
                ('service_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reception.servicetype', verbose_name='نوع خدمت')),
            ],
            options={
                'verbose_name': 'آمار خدمت بیمار',
                'verbose_name_plural': 'آمار خدمات بیماران',
            },
        ),
        migrations.AddIndex(
            model_name='reception',
            index=models.Index(fields=['admission_date'], name='reception_r_admissi_67e729_idx'),
        ),
        migrations.AddIndex(
            model_name='reception',
            index=models.Index(fields=['location'], name='reception_r_locatio_54c628_idx'),
        ),
        migrations.AddIndex(
            model_name='reception',
            index=models.Index(fields=['admission_code'], name='reception_r_admissi_cede5b_idx'),
        ),
        migrations.AddIndex(
            model_name='reception',
            index=models.Index(fields=['patient'], name='reception_r_patient_e28eac_idx'),
        ),
        migrations.AddIndex(
            model_name='reception',
            index=models.Index(fields=['created_at'], name='reception_r_created_597963_idx'),
        ),
        migrations.AddIndex(
            model_name='resource',
            index=models.Index(fields=['name', 'location'], name='reception_r_name_99e7d3_idx'),
        ),
        migrations.AddIndex(
            model_name='resource',
            index=models.Index(fields=['type'], name='reception_r_type_4936d3_idx'),
        ),
        migrations.AddIndex(
            model_name='resource',
            index=models.Index(fields=['is_available'], name='reception_r_is_avai_6ed820_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='resource',
            unique_together={('name', 'location')},
        ),
        migrations.AddIndex(
            model_name='receptionservice',
            index=models.Index(fields=['tracking_code'], name='reception_r_trackin_3437a7_idx'),
        ),
        migrations.AddIndex(
            model_name='receptionservice',
            index=models.Index(fields=['scheduled_time'], name='reception_r_schedul_9709ab_idx'),
        ),
        migrations.AddIndex(
            model_name='receptionservice',
            index=models.Index(fields=['reception'], name='reception_r_recepti_d09174_idx'),
        ),
        migrations.AddIndex(
            model_name='receptionservice',
            index=models.Index(fields=['appointment'], name='reception_r_appoint_01fa44_idx'),
        ),
        migrations.AddIndex(
            model_name='receptionservice',
            index=models.Index(fields=['status'], name='reception_r_status_d3855b_idx'),
        ),
        migrations.AddIndex(
            model_name='receptionservice',
            index=models.Index(fields=['tariff'], name='reception_r_tariff__b7dc47_idx'),
        ),
        migrations.AddIndex(
            model_name='servicetype',
            index=models.Index(fields=['code'], name='reception_s_code_a7743a_idx'),
        ),
        migrations.AddIndex(
            model_name='servicetype',
            index=models.Index(fields=['name'], name='reception_s_name_cdb8f3_idx'),
        ),
        migrations.AddIndex(
            model_name='servicetype',
            index=models.Index(fields=['is_active'], name='reception_s_is_acti_05f5fa_idx'),
        ),
        migrations.AddIndex(
            model_name='servicetariff',
            index=models.Index(fields=['service_type'], name='reception_s_service_fe146a_idx'),
        ),
        migrations.AddIndex(
            model_name='servicetariff',
            index=models.Index(fields=['valid_from', 'valid_to'], name='reception_s_valid_f_bc4bfd_idx'),
        ),
        migrations.AddIndex(
            model_name='patientservicestats',
            index=models.Index(fields=['patient', 'service_type'], name='reception_p_patient_c4a19f_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='patientservicestats',
            unique_together={('patient', 'service_type')},
        ),
    ]
