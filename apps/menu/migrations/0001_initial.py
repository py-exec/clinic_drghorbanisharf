# Generated by Django 5.2.4 on 2025-07-27 10:56

import django.contrib.postgres.fields
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='MenuItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text="عنوان قابل نمایش آیتم در منو. (مثلاً: 'داشبورد', 'لیست بیماران').", max_length=150, verbose_name='عنوان منو')),
                ('description', models.TextField(blank=True, help_text='توضیحات کوتاه یا tooltip برای آیتم منو.', null=True, verbose_name='توضیحات')),
                ('item_type', models.CharField(choices=[('link', 'لینک (صفحه)'), ('header', 'عنوان گروه (Header)'), ('divider', 'جداکننده (Divider)')], default='link', help_text='نوع آیتم منو را مشخص می\u200cکند (مثلاً: لینک به یک صفحه، عنوان یک گروه، یا خط جداکننده).', max_length=20, verbose_name='نوع آیتم')),
                ('link_type', models.CharField(choices=[('reverse', 'نام URL (Django)'), ('static', 'لینک ثابت (مسیر مطلق)'), ('external', 'لینک خارجی (URL کامل)')], default='reverse', help_text="نحوه تفسیر 'مقصد لینک'. (مثلاً: آیا 'dashboard' یک نام URL است یا یک مسیر ثابت).", max_length=10, verbose_name='نوع لینک')),
                ('link_target', models.CharField(blank=True, help_text="مقدار لینک. بر اساس 'نوع لینک' می\u200cتواند یک نام URL جنگو، یک مسیر ثابت، یا یک URL خارجی باشد. (مثلاً: 'dashboard' یا '/about/' یا 'https://example.com').", max_length=500, null=True, verbose_name='مقصد لینک')),
                ('reverse_args_json', models.JSONField(blank=True, help_text="آرگومان\u200cهای positional برای reverse کردن URL (مثلاً: [1, 'detail']). باید JSON معتبر باشد.", null=True, verbose_name='آرگومان\u200cهای URL (JSON)')),
                ('reverse_kwargs_json', models.JSONField(blank=True, help_text="آرگومان\u200cهای keyword برای reverse کردن URL (مثلاً: {'pk': 1}). باید JSON معتبر باشد.", null=True, verbose_name='آرگومان\u200cهای کلیدواژه URL (JSON)')),
                ('highlight_url_names', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), blank=True, help_text="لیستی از نام\u200cهای URL (جنگو) که در صورت فعال بودن مسیر آن\u200cها، این آیتم منو هایلایت شود. (مثال: ['patient:detail', 'patient:edit']).", null=True, size=None, verbose_name='URL های مرتبط برای هایلایت')),
                ('order', models.PositiveIntegerField(default=0, help_text='ترتیب نمایش آیتم در بین آیتم\u200cهای هم\u200cسطح (والد یکسان).', verbose_name='ترتیب نمایش')),
                ('icon', models.CharField(default='bx-circle', help_text="کلاس CSS برای آیکون آیتم منو. (مثلاً: 'bx bx-home', 'tf-icons bx bx-group').", max_length=100, verbose_name='کلاس آیکون')),
                ('badge', models.CharField(blank=True, help_text="متن نشان کوچک کنار آیتم منو (مثلاً: 'جدید', '۴', 'بتا').", max_length=20, null=True, verbose_name='نشان (Badge)')),
                ('css_class', models.CharField(blank=True, help_text='کلاس CSS اضافی برای استایل\u200cدهی سفارشی این آیتم منو.', max_length=100, null=True, verbose_name='کلاس CSS سفارشی')),
                ('show_in_menu', models.BooleanField(default=True, help_text='آیا این آیتم باید در منوی اصلی ناوبری (UI) نمایش داده شود؟', verbose_name='نمایش در منو')),
                ('is_active', models.BooleanField(default=True, help_text='آیا این آیتم منو در حال حاضر فعال است و قابل استفاده است؟ (غیرفعال کردن آن را پنهان می\u200cکند).', verbose_name='فعال؟')),
                ('auto_generated', models.BooleanField(default=False, help_text='آیا این آیتم منو به صورت خودکار توسط سیستم تولید شده است؟ (برای جلوگیری از تغییرات دستی).', verbose_name='تولید خودکار؟')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاریخ ایجاد')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='آخرین بروزرسانی')),
                ('parent', models.ForeignKey(blank=True, help_text='اگر این آیتم زیرمنوی یک آیتم دیگر است، والد آن را انتخاب کنید. (برای ساخت منوهای درختی).', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='menu.menuitem', verbose_name='والد (منوی بالاتر)')),
                ('permissions', models.ManyToManyField(blank=True, help_text='مجوزهای AccessPermission که کاربر برای دیدن این آیتم منو باید داشته باشد. (کاربر باید حداقل یکی را داشته باشد).', related_name='menu_items', to='accounts.accesspermission', verbose_name='مجوزهای لازم')),
                ('required_roles', models.ManyToManyField(blank=True, help_text='نقش\u200cهای (Role) که کاربر برای دیدن این آیتم منو باید داشته باشد. (کاربر باید حداقل یکی را داشته باشد).', related_name='menu_items_by_role', to='accounts.role', verbose_name='نقش\u200cهای لازم')),
            ],
            options={
                'verbose_name': 'آیتم منو',
                'verbose_name_plural': 'منوها',
                'ordering': ['parent__id', 'order', 'title'],
                'indexes': [models.Index(fields=['parent', 'order'], name='menu_menuit_parent__208181_idx'), models.Index(fields=['is_active', 'show_in_menu'], name='menu_menuit_is_acti_c2ce9b_idx'), models.Index(fields=['item_type'], name='menu_menuit_item_ty_d6f8bf_idx'), models.Index(fields=['link_type'], name='menu_menuit_link_ty_d05025_idx')],
            },
        ),
    ]
